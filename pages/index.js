import Head from "next/head";
import styles from "../styles/Home.module.scss";
import KeyboardArrowRightIcon from "@mui/icons-material/KeyboardArrowRight";
import Task from "./components/Task";
import { useState } from "react";

export default function Home() {
  const [inputed, setInputed] = useState("");
  const [tasks, setTasks] = useState([]);
  const [id, setId] = useState(0);
  const [dones, setDones] = useState(0);

  // add task using click on button
  const addToTasks = () => {
    if (inputed === "") {
      alert("Please write task first ");
    } else {
      setTasks([
        ...tasks,
        {
          id: id,
          text: inputed,
          done: false,
        },
      ]);
      setId((prev) => prev + 1);
      setInputed("");
    }
  };

  // add taks using "enter"
  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      if (inputed === "") {
        alert("Please write task first ");
      } else {
        addToTasks();
      }
    }
  };

  // make task done
  const makeTaskDone = (itemId) => {
    const newState = tasks.map((obj) => {
      if (obj.id === itemId) {
        return { ...obj, done: true };
      }
      return obj;
    });

    setTasks(newState);
    setDones((prev) => prev + 1);
    console.log(dones);
  };

  // make task undone
  function makeTaskUnDone(itemId) {
    const newState = tasks.map((obj) => {
      if (obj.id === itemId) {
        return { ...obj, done: false };
      }
      return obj;
    });

    setTasks(newState);
    setDones((prev) => prev - 1);
  }

  const clear = () => {
    setTasks([]);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <header>
          <div className={styles.container}>
            <div className={styles.headerCont}>
              <div className={styles.inputDiv}>
                <input
                  onKeyDown={handleKeyDown}
                  type="text"
                  value={inputed}
                  onChange={(e) => setInputed(e.target.value)}
                  required
                  autoFocus
                />
                <KeyboardArrowRightIcon
                  className={styles.arrowRight}
                  onClick={addToTasks}
                />
              </div>
            </div>
          </div>
        </header>
        <div className={styles.container}>
          <div className={styles.undoneTaskts}>
            <div className={styles.wrapper}>
              {tasks.map(
                (item, i) =>
                  !item.done && (
                    <Task
                      key={item.id}
                      keyprop={item.id}
                      text={item.text}
                      done={item.done}
                      click={() => makeTaskDone(item.id)}
                    />
                  )
              )}
            </div>
          </div>
          {dones > 0 && <p className={styles.complated}>Completed</p>}
          <div className={styles.doneTasks}>
            <div className={styles.wrapper}>
              {tasks.map(
                (item) =>
                  item.done && (
                    <Task
                      key={item.id}
                      keyprop={item.id}
                      text={item.text}
                      done={true}
                      click={() => makeTaskUnDone(item.id)}
                    />
                  )
              )}
            </div>
          </div>
          <button className={styles.clearAll} onClick={clear}>
            Clear all
          </button>
        </div>
      </main>
    </>
  );
}
